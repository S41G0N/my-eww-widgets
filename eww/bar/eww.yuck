;; ######################################### VARIABLES ##############################################
(deflisten GET_LAYOUT "scripts/layout --get-layout")
(deflisten WORKSPACES_LIST :initial "[]" "scripts/get_workspaces")
(deflisten CURRENT_WORKSPACE :initial "[]" "scripts/current_workspace")
(deflisten GET_VOLUME "scripts/audio --get-vol")
(deflisten GET_MICROPHONE_SENSITIVITY "scripts/audio --get-mic")
(deflisten SCREEN_BRIGHTNESS "scripts/brightness")

(defpoll CURRENT_POWER_PROFILE :interval "1s" `system76-power profile | grep 'Power Profile' | awk -F': ' '{print $2}' | xargs`)
(defpoll BATTERY_CHARGE_LIMIT :interval "1s" "cat /sys/class/power_supply/BAT0/charge_control_end_threshold")
(defpoll HOUR :interval "1s" "scripts/time_info --hour")
(defpoll MINUTES :interval "1s" "scripts/time_info --minutes")
(defpoll PM_OR_AM :interval "1s" "scripts/time_info --type")
(defpoll DATE :interval "1s" "scripts/time_info --date")
(defpoll IP_ADDRESS :interval "20s" "ip addr show | awk '/inet / {print $2}' | cut -d/ -f1 | tail -n1")
(defpoll CONNECTED_NETWORK :interval "1s" "scripts/network")
(defpoll VOLUME_ICON :interval "0.3s" "scripts/audio --get-volicon")
(defpoll MICROPHONE_ICON :interval "0.3s" "scripts/audio --get-micicon")
(defpoll CURRENT_WINDOW_TITLE :interval "0.1s" "hyprctl activeworkspace -j | jq -r '.lastwindowtitle' | awk -F ' - ' '{print $NF}'")
(defpoll CURRENT_POWER_CONSUMPTION :interval "0.5s" "scripts/get_power_consumption")
(defpoll VPN_STATUS :interval "1s" "scripts/get_vpn_status")
(defpoll MONITOR_NETWORK_TRAFFIC :interval "0.2s" "scripts/monitor_network_traffic")

(defvar SELECTED_WINDOW_TITLE "")
(defvar SWAP_ACTIVE_OR_SELECTED_WINDOW_TITLE 0)
(defvar SWAP_TIME_DATE 0)
(defvar TIME_ANIMATION "slideup")
(defvar SHOW_BATTERY_STATUS false)
(defvar SHOW_DISK_SPACE false)
(defvar SHOW_RAM_USAGE false)
(defvar SHOW_HIDDEN_SETTINGS false)
(defvar CHANGE_KBD_BRIGHTNESS "asusctl -n")
(defvar SWITCH_KBD_LAYOUT "scripts/layout --switch-layout")
(defvar SET_POWER_PROFILE "system76-power profile")
(defvar RUN_EWW "eww -c ~/.config/eww/bar")
(defvar LAUNCH_APP "scripts/launch_app")
(defvar NETWORK_SETTINGS_APP "iwgtk")
(defvar SWAP_GRAPH_POWERSETTINGS 0)


;; ################################################ ADJUSTABLE SETTINGS (HIDDEN BEHIND GEAR WHEEL) ##########################################
;; PROGRESS BAR TEMPLATE
(defwidget progress_scale [label orientation onchange value ?flipped ?action ?min ?right_click]
  (box :orientation "h" :class "progress-scale" :space-evenly false
    (button :onrightclick right_click :onclick action label)
      (scale 
        :orientation orientation
        :flipped flipped
        :min {0 + min}
        :max 101
        :active {onchange != ""}
        :value value
        :onchange onchange)))

(defvar LIST_OF_ADJUSTABLE_SETTINGS '[
  {"name": "MICROPHONE", "onchange": "scripts/audio --set-mic {}", "on_click": "scripts/audio --toggle-mic", "right_click": "helvum"},
  {"name": "VOLUME", "onchange": "scripts/audio --set-vol {}", "on_click": "scripts/audio --toggle-vol", "right_click": "helvum"},
  {"name": "SCREEN BRIGHTNESS", "onchange": "scripts/brightness --set-bright {}", "on_click": "asusctl -n"}
]')

;; ADJUSTABLE SETTINGS
(defwidget hidden_adjustable_settings []
  (eventbox :onhover "${RUN_EWW} update SHOW_HIDDEN_SETTINGS=true" :onhoverlost "${RUN_EWW} update SHOW_HIDDEN_SETTINGS=false"
    (box :space-evenly "false" :orientation "h" :halign "fill"
      (button :class "unset-default-scss" :onclick "${RUN_EWW} close additionalSettingsManager || ${RUN_EWW} open additionalSettingsManager"
        (label :valign "center" :class "settings-wheel" :text "âš™"))

      (revealer :reveal SHOW_HIDDEN_SETTINGS :transition "slideright" :duration "450ms" :valign "fill"
        (box :space-evenly false
          (for setting in LIST_OF_ADJUSTABLE_SETTINGS
            (progress_scale
              :orientation {setting.orientation == "h" ? "h" : "v"}
              :flipped {setting.flipped == "false" ? false : true}
              :label {setting.name == "MICROPHONE" ? MICROPHONE_ICON : setting.name == "VOLUME" ? VOLUME_ICON : "ðŸ”†"}
              :value {setting.name == "MICROPHONE" ? GET_MICROPHONE_SENSITIVITY : setting.name == "VOLUME" ? GET_VOLUME : SCREEN_BRIGHTNESS}
              :onchange {setting.onchange}
              :action {setting.on_click}
              :right_click "${LAUNCH_APP} ${setting.right_click}"))

            ;; KEYBOARD SETTINGS
            (button :onclick SWITCH_KBD_LAYOUT :onrightclick CHANGE_KBD_BRIGHTNESS 
              (box :orientation "h" :space-evenly false
                (label :text "âŒ¨" :class "kbd-settings")
                  (label :markup "<span font-size=\"small\" font-weight=\"light\">${GET_LAYOUT}</span>"))))))))

;; ################################################ NON-ADJUSTABLE MONITORED METRICS (RAM, MEMORY, BATTERY) ##########################################

(defwidget tracker [switch_property launch_on_click value show_widget reveal_when_is_true revealed_value_on_hover ?displayed_label ?additional_classes]
  (eventbox 
    :onhover "${RUN_EWW} update ${switch_property}=true"
    :onhoverlost "${RUN_EWW} update ${switch_property}=false"
      (button :onclick "${RUN_EWW} close ${launch_on_click} || ${RUN_EWW} open ${launch_on_click}"
        (box :orientation "h" :class "tracker-circular-progress-box ${additional_classes > 80 ? "high" : additional_classes > 50 ? "medium" : "low"}" :space-evenly false :valign "center"
          (label :text displayed_label)
          (box :space-evenly false :orientation "v" :valign "center"
            (revealer :reveal {!reveal_when_is_true} :transition "slidedown" :duration "200ms"
              (box :class "tracker-circular-progress-box"
                (circular-progress :start-at 50 :thickness 3.3 :value value)))
            (revealer :reveal reveal_when_is_true :transition "slideup" :duration "200ms"
              (box :class "tracker-circular-progress-box"
                (label :text revealed_value_on_hover))))))))

(defvar TRACKED_METRICS '[
  {"name": "RAM", "label": "ðŸ’¾", "on_click": ""},
  {"name": "DISK", "label": "ðŸ’»", "on_click": ""},
  {"name": "BATTERY","label":"ðŸ”‹", "on_click": "powerManager"}
]')

(defwidget trackers []
  (box :class "unset-default-scss trackers" :visible {!SHOW_HIDDEN_SETTINGS} :space-evenly false

  (for metric in TRACKED_METRICS
    (tracker
      :switch_property {metric.name == "RAM" ? "SHOW_RAM_USAGE" : metric.name == "DISK" ? "SHOW_DISK_SPACE" : "SHOW_BATTERY_STATUS" }
      :show_widget {metric.show == "false" ? false : true}
      :launch_on_click {metric.on_click}
      :displayed_label {metric.label} 
      :additional_classes {metric.name == "RAM" ? EWW_RAM.used_mem_perc : metric.name == "DISK" ? EWW_DISK["/"].used_perc : EWW_BATTERY.BAT0.status}
      :value {metric.name == "RAM" ? EWW_RAM.used_mem_perc : metric.name == "DISK" ? EWW_DISK["/"].used_perc : EWW_BATTERY.BAT0.capacity}
      :reveal_when_is_true {metric.name == "RAM" ? SHOW_RAM_USAGE : metric.name == "DISK" ? SHOW_DISK_SPACE : SHOW_BATTERY_STATUS}
      :revealed_value_on_hover "${metric.name == "RAM" ? round(EWW_RAM.used_mem_perc, 0) : metric.name == "DISK" ? round(EWW_DISK["/"].used_perc, 0) : EWW_BATTERY.BAT0.capacity}%"))))

;; ############################################################## WINDOWS ###############################################################################
;;  MAIN BAR WINDOW
(defwindow mainbar [width]
  :monitor 0
  :windowtype "dock"
  :geometry (geometry :anchor "top center" :hexpand true :halign "center" :width {width})
  :exclusive true
  :stacking "fg"
  (centerbox :class "main-container" :orientation "h" :halign true :hexpand true
    ;; WORKSPACES & WINDOW TITLES
    (box :halign "start" 
      (box :space-evenly false
        (eventbox
          :onhover "${RUN_EWW} update SWAP_ACTIVE_OR_SELECTED_WINDOW_TITLE=0"
          :onhoverlost "${RUN_EWW} update SWAP_ACTIVE_OR_SELECTED_WINDOW_TITLE=1"
          (box :class "workspaces" 
            (label 
              :text "${CURRENT_WORKSPACE}" 
              :visible false)
              (for workspace in WORKSPACES_LIST
                (eventbox :onhover "${RUN_EWW} update SELECTED_WINDOW_TITLE='${replace(workspace.windows[1],'&','&amp;')}'"
                  (button :onclick "hyprctl dispatch workspace ${workspace.id}" 
                    (box 
                      :class "default-workspace 
                        ${workspace.id == CURRENT_WORKSPACE[0] ? "firstScreen" : ""} 
                        ${workspace.id == CURRENT_WORKSPACE[1] ? "secondScreen" : ""} 
                        ${workspace.id == CURRENT_WORKSPACE[2] ? "thirdScreen" : ""} 
                        ${workspace.id == CURRENT_WORKSPACE[3] ? "fourthScreen" : ""} 
                        ${workspace.windows[0] > 0 ? "occupiedWindow" : ""}"

                      (label :text "${workspace.id}")))))))

          (stack :selected SWAP_ACTIVE_OR_SELECTED_WINDOW_TITLE :class "current-window-title" :transition "Slideleft"
            (label :markup "<span font-size=\"x-small\" font-weight=\"light\">${SELECTED_WINDOW_TITLE == '' ? "Empty" : SELECTED_WINDOW_TITLE}</span>")
            (label :markup "<span font-size=\"x-small\" font-weight=\"light\">${CURRENT_WINDOW_TITLE == '' ? "Desktop" : CURRENT_WINDOW_TITLE}</span>"))))

      ;; TIME
      (box :halign "center" 
        (eventbox :onhover "${RUN_EWW} update SWAP_TIME_DATE=1 TIME_ANIMATION='slidedown'" :onhoverlost "${RUN_EWW} update SWAP_TIME_DATE=0 TIME_ANIMATION='slideup'"
          (button :onclick "${RUN_EWW} close calendar || ${RUN_EWW} open calendar"
            (stack :selected SWAP_TIME_DATE :transition TIME_ANIMATION :class "time" :same-size true
              (label :markup "<span font-weight=\"heavy\">${HOUR}</span><span font-weight=\"heavy\">:${MINUTES}</span><span font-size=\"xx-small\">${PM_OR_AM}</span>")
              (label :markup "<span font-weight=\"light\" font-size=\"small\">${DATE}</span>" )))))

      (box :halign "end" :space-evenly false
        ;; WIFI ICON
        (revealer :reveal {!SHOW_HIDDEN_SETTINGS}
            (box :visible {!SHOW_HIDDEN_SETTINGS}
              (button :onclick "${RUN_EWW} close networkManager || ${RUN_EWW} open networkManager"
                (image :path "icons/${VPN_STATUS == "No VPN" ? CONNECTED_NETWORK == 'DISCONNECTED' ? "wifi_red" : "wifi_green" : "shield"}.png" :image-width "20"))))
        ;; RAM, DISK SPACE, BATTERY
        (trackers)
        ;; MIC, VOLUME, BRIGHTNESS, KEYBOARD
        (hidden_adjustable_settings))))

;; POWER MANAGER WINDOW
(defwindow powerManager
  :monitor 0
  :geometry (geometry :anchor "top center" :y 10 :width 200 :height 100)
  :stacking "fg"
  :windowtype "normal"
  (box :class "popup-window" :space-evenly false :orientation "v"
    (button :onclick "${RUN_EWW} close powerManager && ${SET_POWER_PROFILE} battery" "Battery")
    (button :onclick "${RUN_EWW} close powerManager && ${SET_POWER_PROFILE} balanced" "Balanced")
    (button :onclick "${RUN_EWW} close powerManager && ${SET_POWER_PROFILE} performance" "Performance")

    (label :class "white-border")

    (box :orientation "v"
      (label :text "Charge Limit:")
      (box :class "horizontal-progress-scale" :space-evenly false
        (progress_scale :orientation "h"
          :label "ðŸ”‹${BATTERY_CHARGE_LIMIT}%"
          :value BATTERY_CHARGE_LIMIT
          :onchange "asusctl -c {}"
          :min 20 )
        (box :space-evenly false
          (button :onclick "asusctl -c ${BATTERY_CHARGE_LIMIT + 1}" "â–²")
          (button :onclick "asusctl -c ${BATTERY_CHARGE_LIMIT - 1}" "â–¼"))))

    (label :class "white-border")

    (eventbox :onhover "${RUN_EWW} update SWAP_GRAPH_POWERSETTINGS=1" :onhoverlost "${RUN_EWW} update SWAP_GRAPH_POWERSETTINGS=0"
      (box :orientation "v" :valign "center" :class "unset-default-scss"
        (stack :selected SWAP_GRAPH_POWERSETTINGS :same-size true :transition "slideup"
          (box :orientation "v" :valign "center"
            (label :text "${CURRENT_POWER_CONSUMPTION == 0 ? "On AC" : "RATE: ${CURRENT_POWER_CONSUMPTION}W"}")
            (graph
              :class "power-consumption-graph"
              :thickness 3
              :value CURRENT_POWER_CONSUMPTION
              :time-range "20s"
              :min 0
              :max 50
              :dynamic "true"
              :line-style "round"))
          (button :onclick "${LAUNCH_APP} rog-control-center" "POWER SETTINGS"))))))

;;POPUP CALENDAR WINDOW
(defwindow calendar
  :monitor 0
  :geometry (geometry :anchor "top center" :y 10 :width 300 :height 100 )
  :stacking "fg"
  :windowtype "normal"
  (box
    :class "popup-window"
    :orientation "h"
    :valign "fill"
    :halign "fill"
    (calendar :show-details true :show-heading true :show-day-names true)))

;; NETWORK MANAGER WINDOW
(defwindow networkManager
  :monitor 0
  :geometry (geometry :anchor "top center" :y 10 :width 200 :height 250)
  :stacking "fg"
  :windowtype "normal"
  (box :class "popup-window network-manager" :orientation "v" :space-evenly false
    (label :text CONNECTED_NETWORK)
    (label :text IP_ADDRESS)
    (label :class "white-border")
    (button :onclick "${RUN_EWW} close networkManager && ${LAUNCH_APP} ${NETWORK_SETTINGS_APP}" "Network Settings")
    (label :class "white-border")

    (box :orientation "v" :valign "center" :class "unset-default-scss"
      (label :text "Download:")
      (label :text "${MONITOR_NETWORK_TRAFFIC.download} bytes/second")
      (graph
        :class "power-consumption-graph"
        :thickness 3
        :value {MONITOR_NETWORK_TRAFFIC.download}
        :time-range "20s"
        :min 0
        :max 50
        :dynamic "true"
        :line-style "round")

      (label :text "Upload:")
      (label :text "${MONITOR_NETWORK_TRAFFIC.upload} bytes/second")
      (graph
        :class "power-consumption-graph"
        :thickness 3
        :value {MONITOR_NETWORK_TRAFFIC.upload}
        :time-range "20s"
        :min 0
        :max 50
        :dynamic "true"
        :line-style "round"))))

;; NETWORK MANAGER WINDOW
(defwindow additionalSettingsManager
  :monitor 0
  :stacking "fg"
  :geometry (geometry :anchor "top center" :y 10 :width 250 :height 200 )
  :windowtype "normal"
  (box :class "popup-window" :orientation "v" :space-evenly false
    (button :onclick "${RUN_EWW} close additionalSettingsManager" "Misc Settings")
    (box :orientation "h"
      (button :onclick "" "button 1")
      (button :onclick "" "button 2"))
    (box :orientation "h"
      (button :onclick "" "button 3")
      (button :onclick "${RUN_EWW} close additionalSettingsManager && ${LAUNCH_APP} ~/.config/hypr/scripts/lock_screen.sh" "ðŸ”’"))))
