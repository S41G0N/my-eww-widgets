;; ######################################### VARIABLES ##############################################
(deflisten GET_LAYOUT "scripts/layout --get-layout")
(deflisten WORKSPACES_LIST :initial "[]" "scripts/get_workspaces")
(deflisten CURRENT_WORKSPACE :initial "[]" "scripts/current_workspace")
(deflisten GET_VOLUME "scripts/audio --get-vol")
(deflisten GET_MICROPHONE_SENSITIVITY "scripts/audio --get-mic")
(deflisten SCREEN_BRIGHTNESS "scripts/brightness")

(defpoll CURRENT_POWER_PROFILE :interval "1s" `system76-power profile | grep 'Power Profile' | awk -F': ' '{print $2}' | xargs`)
(defpoll BATTERY_CHARGE_LIMIT :interval "1s" "cat /sys/class/power_supply/BAT0/charge_control_end_threshold")
(defpoll HOUR :interval "1s" "scripts/time_info --hour")
(defpoll MINUTES :interval "1s" "scripts/time_info --minutes")
(defpoll PM_OR_AM :interval "1s" "scripts/time_info --type")
(defpoll DATE :interval "1s" "scripts/time_info --date")
(defpoll IP_ADDRESS :interval "20s" "ip addr show | awk '/inet / {print $2}' | cut -d/ -f1 | tail -n1")
(defpoll CONNECTED_NETWORK :interval "1s" "scripts/network")
(defpoll VOLUME_ICON :interval "0.3s" "scripts/audio --get-volicon")
(defpoll MICROPHONE_ICON :interval "0.3s" "scripts/audio --get-micicon")
(defpoll CURRENT_WINDOW_TITLE :interval "0.1s" "hyprctl activeworkspace -j | jq -r '.lastwindowtitle' | awk -F ' - ' '{print $NF}'")

(defvar SELECTED_WINDOW_TITLE "")
(defvar SWAP_ACTIVE_OR_SELECTED_WINDOW_TITLE 0)
(defvar SWAP_TIME_DATE 0)
(defvar TIME_ANIMATION "slideup")
(defvar SHOW_BATTERY_STATUS false)
(defvar SHOW_DISK_SPACE false)
(defvar SHOW_RAM_USAGE false)
(defvar SHOW_HIDDEN_SETTINGS false)
(defvar CHANGE_KBD_BRIGHTNESS "asusctl -n")
(defvar SWITCH_KBD_LAYOUT "scripts/layout --switch-layout")
(defvar TOGGLE_WINDOW "python scripts/popup_windows.py")
(defvar SET_POWER_PROFILE "system76-power profile")
(defvar RUN_EWW "eww -c ~/.config/eww/bar")
(defvar LAUNCH_APP "scripts/launch_app")
(defvar NETWORK_SETTINGS_APP "iwgtk")

;; ################################################ SHOW NETWORKS ##########################################

(defwidget wifi []
  (revealer :reveal {!SHOW_HIDDEN_SETTINGS}
    (box :visible {!SHOW_HIDDEN_SETTINGS}
      (button :onclick "${TOGGLE_WINDOW} --networkManager"
        (image :path "icons/wifi_${CONNECTED_NETWORK == 'DISCONNECTED' ? "red" : "green"}.png" :image-width "20")))))

(defwidget popup_network_manager []
  (box
    :class "popup-window network-manager"
    :orientation "v"
    :space-evenly false
    (label :text CONNECTED_NETWORK)
    (label :text IP_ADDRESS)
    (button
      :onclick "${TOGGLE_WINDOW} --networkManager && ${LAUNCH_APP} ${NETWORK_SETTINGS_APP}"
      (label :text "Network Settings"))))

;; ################################################ MONITOR MANAGEMENT ##########################################
(defwidget popup_monitor_manager []
  (box
    :class "popup-window"
    :orientation "v"
    :space-evenly false
    (label :text "MONITOR SETTINGS")))

;; ################################################ WORKSPACE MANAGEMENT ##########################################
(defwidget workspace_tracker []
  (box :space-evenly false
    (eventbox
      :onhover "${RUN_EWW} update SWAP_ACTIVE_OR_SELECTED_WINDOW_TITLE=0"
      :onhoverlost "${RUN_EWW} update SWAP_ACTIVE_OR_SELECTED_WINDOW_TITLE=1"
      (box :class "workspaces" 
        (label :text "${CURRENT_WORKSPACE}" :visible false)
        (for workspace in WORKSPACES_LIST
          (eventbox
            :onhover "${RUN_EWW} update SELECTED_WINDOW_TITLE='${replace(workspace.windows[1],'&','&amp;')}'"
            (button :onclick "hyprctl dispatch workspace ${workspace.id}" 
              (box :class "default-workspace 
                ${workspace.id == CURRENT_WORKSPACE[0] ? "firstScreen" : ""} 
                ${workspace.id == CURRENT_WORKSPACE[1] ? "secondScreen" : ""} 
                ${workspace.id == CURRENT_WORKSPACE[2] ? "thirdScreen" : ""} 
                ${workspace.id == CURRENT_WORKSPACE[3] ? "fourthScreen" : ""} 
                ${workspace.windows[0] > 0 ? "occupiedWindow" : ""}"
                (label :text "${workspace.id}")))))))
        (stack
          :class "current-window-title"
          :selected SWAP_ACTIVE_OR_SELECTED_WINDOW_TITLE
          :transition "Slideleft"
          (label :markup "<span font-size=\"x-small\" font-weight=\"light\">${SELECTED_WINDOW_TITLE == '' ? "Empty" : SELECTED_WINDOW_TITLE}</span>")
          (label :markup "<span font-size=\"x-small\" font-weight=\"light\">${CURRENT_WINDOW_TITLE == '' ? "Desktop" : CURRENT_WINDOW_TITLE}</span>"))))

;; ################################################ TIME DISPLAY ##########################################
;; TIME WIDGET
(defwidget time []
  (eventbox
    :onhover "${RUN_EWW} update SWAP_TIME_DATE=1 TIME_ANIMATION='slidedown'"
    :onhoverlost "${RUN_EWW} update SWAP_TIME_DATE=0 TIME_ANIMATION='slideup'"
    (button :onclick "${TOGGLE_WINDOW} --calendar"
      (stack
        :selected SWAP_TIME_DATE
        :transition TIME_ANIMATION
        :same-size true
        :class "time"
        (label :markup "<span font-weight=\"heavy\">${HOUR}</span><span font-weight=\"heavy\">:${MINUTES}</span><span font-size=\"xx-small\">${PM_OR_AM}</span>")
        (label :markup "<span font-weight=\"light\" font-size=\"small\">${DATE}</span>" )))))

;; POPUP CALENDAR
(defwidget popup_calendar []
  (box
    :class "popup-window"
    :orientation "h"
    :valign "fill"
    :halign "fill"
    (calendar
      :show-details true
      :show-heading true
      :show-day-names true)))

;; ################################################ POWER MANAGEMENT ##########################################
(defwidget popup_power_manager []
  (box :class "popup-window" :space-evenly false :orientation "v"
    (button :onclick "${SET_POWER_PROFILE} battery && ${TOGGLE_WINDOW} --powerManager" (label :text "Battery"))
    (button :onclick "${SET_POWER_PROFILE} balanced && ${TOGGLE_WINDOW} --powerManager"(label :text "Balanced"))
    (button :onclick "${SET_POWER_PROFILE} performance && ${TOGGLE_WINDOW} --powerManager"(label :text "Performance"))
    (label :text "" :class "white-border")
    (label :text "Charge Limit:")
    (box :space-evenly false :class "horizontal-progress-scale"
    (progress_scale
      :orientation "h"
      :label "ðŸ”‹${BATTERY_CHARGE_LIMIT}%"
      :value BATTERY_CHARGE_LIMIT
      :onchange "asusctl -c {}"
      :min 20 )
      (box :space-evenly false
      (button :onclick "asusctl -c ${BATTERY_CHARGE_LIMIT + 1}" (label :text "â–²"))
      (button :onclick "asusctl -c ${BATTERY_CHARGE_LIMIT - 1}" (label :text "â–¼"))))))

;; ################################################ ADJUSTABLE SETTINGS (HIDDEN BEHIND GEAR WHEEL) ##########################################
;; PROGRESS BAR TEMPLATE
(defwidget progress_scale [label orientation onchange value ?flipped ?action ?min ?right_click]
  (box :orientation "h" :class "progress-scale" :space-evenly false
    (button :onrightclick right_click :onclick action label)
    (scale 
      :orientation orientation
      :flipped flipped
      :min {0 + min}
      :max 101
      :active {onchange != ""}
      :value value
      :onchange onchange)))

;; ADJUSTABLE SETTINGS
(defwidget adjustables []
  (box :space-evenly false
    ;; MICROPHONE SETTINGS
    (progress_scale
      :orientation "v"
      :flipped true
      :label MICROPHONE_ICON
      :value GET_MICROPHONE_SENSITIVITY
      :onchange "scripts/audio --set-mic {}"
      :action "scripts/audio --toggle-mic"
      :right_click "${LAUNCH_APP} helvum")
    ;; VOLUME SETTINGS
    (progress_scale
      :orientation "v"
      :flipped true
      :label VOLUME_ICON
      :value GET_VOLUME
      :onchange "scripts/audio --set-vol {}"
      :action "scripts/audio --toggle-vol"
      :right_click "${LAUNCH_APP} helvum")
    ;; SCREEN BRIGHTNESS SETTINGS
    (progress_scale
      :orientation "v"
      :flipped true
      :label "ðŸ”†"
      :value SCREEN_BRIGHTNESS
      :onchange "scripts/brightness --set-bright {}"
      :action "asusctl -n")

    ;; KEYBOARD SETTINGS
    (button :onclick SWITCH_KBD_LAYOUT :onrightclick CHANGE_KBD_BRIGHTNESS 
      (box :orientation "h" :space-evenly false
        (label :text "âŒ¨" :class "kbd-settings")
        (label :markup "<span font-size=\"small\" font-weight=\"light\">${GET_LAYOUT}</span>")))))

(defwidget settings []
  (eventbox
    :onhover "${RUN_EWW} update SHOW_HIDDEN_SETTINGS=true"
    :onhoverlost "${RUN_EWW} update SHOW_HIDDEN_SETTINGS=false"
    (box
      :space-evenly "false"
      :orientation "h"
      :halign "fill"
    (button 
      :class "unset-default-scss"
      :onclick "${TOGGLE_WINDOW} --monitorManager"
      (label 
        :valign "center"
        :class "settings-wheel"
        :text "âš™"))
    (revealer
      :reveal SHOW_HIDDEN_SETTINGS
      :transition "slideright"
      :duration "450ms"
      :valign "fill"
      (adjustables)))))

;; ################################################ NON-ADJUSTABLE MONITORED METRICS (RAM, MEMORY, BATTERY) ##########################################

(defwidget tracker [switch_property launch_on_click value show_widget reveal_when_is_true revealed_value_on_hover ?displayed_label ?additional_classes]
  (eventbox
    :onhover "${RUN_EWW} update ${switch_property}=true"
    :onhoverlost "${RUN_EWW} update ${switch_property}=false"
      (button :onclick "${TOGGLE_WINDOW} ${launch_on_click}"
        (box :orientation "h" :class "tracker-circular-progress-box ${additional_classes}" :space-evenly false :valign "center"
          (label :text displayed_label)
          (box :space-evenly false :orientation "v" :valign "center"
            (revealer :reveal {!reveal_when_is_true} :transition "slidedown" :duration "200ms"
              (box :class "tracker-circular-progress-box"
                (circular-progress :start-at 50 :value value :thickness 3.3)))
            (revealer :reveal reveal_when_is_true :transition "slideup" :duration "200ms"
              (box :class "tracker-circular-progress-box"
                (label :class "" :text revealed_value_on_hover))))))))

(defwidget trackers []
  (box :class "unset-default-scss trackers" :visible {!SHOW_HIDDEN_SETTINGS} :space-evenly false
  ;; MEMORY TRACKER
    (tracker
      :switch_property "SHOW_RAM_USAGE"
      :show_widget true
      :launch_on_click ""
      :displayed_label "ðŸ’¾" 
      :additional_classes "${EWW_RAM.used_mem_perc > 80 ? "high" : EWW_RAM.used_mem_perc > 50 ? "medium" : "low"}"
      :value {EWW_RAM.used_mem_perc}
      :reveal_when_is_true SHOW_RAM_USAGE
      :revealed_value_on_hover "${round(EWW_RAM.used_mem_perc, 0)}%")

  ;; RAM TRACKER
    (tracker
      :switch_property "SHOW_DISK_SPACE"
      :show_widget true
      :launch_on_click ""
      :displayed_label "ðŸ’»" 
      :additional_classes "${EWW_DISK["/"].used_perc > 80 ? "high" : EWW_DISK["/"].used_perc > 50 ? "medium" : "low"}" 
      :value {EWW_DISK["/"].used_perc}
      :reveal_when_is_true SHOW_DISK_SPACE
      :revealed_value_on_hover "${round(EWW_DISK["/"].used_perc, 0)}%")

  ;; BATTERY TRACKER
    (tracker
      :switch_property "SHOW_BATTERY_STATUS"
      :show_widget {EWW_BATTERY.BAT0.capacity != '' ? true : false}
      :launch_on_click "--powerManager"
      :displayed_label "ðŸ”‹" 
      :additional_classes "${CURRENT_POWER_PROFILE} ${EWW_BATTERY.BAT0.status}"  
      :value {EWW_BATTERY.BAT0.capacity}
      :reveal_when_is_true SHOW_BATTERY_STATUS
      :revealed_value_on_hover "${EWW_BATTERY.BAT0.capacity}%")))


;; ################################################ CONSISTS OF ALL THINGS ABOVE -> CALLED BY defwindow mainbar ##########################################
;; FINAL BAR CONTAINER
(defwidget full_bar []
  (centerbox :class "main-container" :orientation "h" :halign true :hexpand true
    (box :halign "start" (workspace_tracker))
    (box :halign "center" (time))
    (box :halign "end" :space-evenly false
      (wifi)
      (trackers)
      (settings))))

;; ########################################## WINDOWS #################################################
;;  MAIN BAR WINDOW
(defwindow mainbar [width]
  :monitor 0
  :windowtype "dock"
  :geometry (geometry :anchor "top center" :hexpand true :halign "center" :width {width})
  :exclusive true
  :stacking "fg"
  (full_bar))

;; CALENDAR WINDOW
(defwindow calendar
  :monitor 0
  :geometry (geometry :anchor "top center" :y 10 :width 300 :height 100 )
  :stacking "fg"
  :windowtype "normal"
  (popup_calendar))

;; POWER MANAGER WINDOW
(defwindow powerManager [x_cor ?width]
  :monitor 0
  :geometry (geometry :x {x_cor} :y 10 :width {width} :height 100)
  :stacking "fg"
  :windowtype "normal"
  (popup_power_manager))

;; NETWORK MANAGER WINDOW
(defwindow networkManager [x_cor ?width]
  :monitor 0
  :geometry (geometry :x {x_cor} :y 10 :width {width} :height 100)
  :stacking "fg"
  :windowtype "normal"
  (popup_network_manager))

;; NETWORK MANAGER WINDOW
(defwindow monitorManager [x_cor ?width]
  :monitor 0
  :geometry (geometry :x {x_cor} :y 10 :width {width} :height 100)
  :stacking "fg"
  :windowtype "normal"
  (popup_monitor_manager))
